services:
  db:
    image: postgres:16
    container_name: grassroots-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dev"]
      interval: 10s
      retries: 5
      
  backend:
    image: node:18-alpine
    container_name: grassroots-backend
    working_dir: /workspace/backend
    volumes:
      - .:/workspace:cached
      - backend_node_modules:/workspace/backend/node_modules
    ports:
      - "3001:3001"
    environment:
      DATABASE_URL: "postgres://postgres:pass@db:5432/postgres"
    command: ["sh", "-c", "npm install && npm run dev"]
    depends_on:
      db:
        condition: service_healthy
    profiles:
      - dev

  frontend:
    image: node:18-alpine
    container_name: grassroots-frontend
    working_dir: /workspace/frontend
    volumes:
      - .:/workspace:cached
      - frontend_node_modules:/workspace/frontend/node_modules
    ports:
      - "5173:5173"
    command: ["sh", "-c", "npm install && npm run dev -- --host"]
    profiles:
      - dev

  mcp:
    build: ./mcp-server
    container_name: grassroots-pwa-starter-mcp
    environment:
      DATABASE_URL: "postgres://postgres:pass@db:5432/postgres"
    ports:
      - "9123:9123"
    working_dir: /workspace
    volumes:
      - .:/workspace:cached           # code only
      - mcp_node_modules:/workspace/node_modules
      - /var/run/docker.sock:/var/run/docker.sock  # Allow Docker commands
    command: ["node", "/usr/src/app/server.js"]
    depends_on:
      db:
        condition: service_healthy

volumes:
  db_data:
  mcp_node_modules:
  backend_node_modules:
  frontend_node_modules:
